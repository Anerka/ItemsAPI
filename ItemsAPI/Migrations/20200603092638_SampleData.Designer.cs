// <auto-generated />
using ItemsAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ItemsAPI.Migrations
{
    [DbContext(typeof(ItemInfoContext))]
    [Migration("20200603092638_SampleData")]
    partial class SampleData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItemsAPI.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Big hammer",
                            Name = "Hammer"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Smaller wrench",
                            Name = "Wrench"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Medium screwdriver",
                            Name = "Screwdriver"
                        });
                });

            modelBuilder.Entity("ItemsAPI.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "One",
                            ItemId = 1,
                            Name = "Id 1, Item 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Two",
                            ItemId = 1,
                            Name = "Id 2, Item 1"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Three",
                            ItemId = 2,
                            Name = "Id 3, Item 2"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Four",
                            ItemId = 2,
                            Name = "Id 4, Item 2"
                        });
                });

            modelBuilder.Entity("ItemsAPI.Entities.Rating", b =>
                {
                    b.HasOne("ItemsAPI.Entities.Item", "Item")
                        .WithMany("Rating")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
